package customcompiler;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author reynaldoalvarez
 */
public class Grammar extends javax.swing.JFrame {

    /**
     * Creates new form Grammar
     */
    public Grammar() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonReturn = new javax.swing.JButton();
        labelTitle2 = new javax.swing.JLabel();
        labelTitle3 = new javax.swing.JLabel();
        labelTitle4 = new javax.swing.JLabel();
        labelTitle5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        menuLexer = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuItemExit = new javax.swing.JMenuItem();
        menuHelp = new javax.swing.JMenu();
        menutItemHelp = new javax.swing.JMenuItem();
        menutItemGrammar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonReturn.setFont(new java.awt.Font("Helvetica", 0, 16)); // NOI18N
        buttonReturn.setText("Return");
        buttonReturn.setToolTipText("Goes back to main menu");
        buttonReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonReturnActionPerformed(evt);
            }
        });

        labelTitle2.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        labelTitle2.setText("Lex Grammar");
        labelTitle2.setAlignmentX(45.0F);
        labelTitle2.setAlignmentY(15.0F);

        labelTitle3.setFont(new java.awt.Font("Helvetica Neue", 2, 18)); // NOI18N
        labelTitle3.setForeground(new java.awt.Color(255, 0, 51));
        labelTitle3.setText("<html>Curly braces<br>\ndenote new scope.</html>");
        labelTitle3.setAlignmentX(45.0F);
        labelTitle3.setAlignmentY(15.0F);

        labelTitle4.setFont(new java.awt.Font("Helvetica Neue", 2, 18)); // NOI18N
        labelTitle4.setForeground(new java.awt.Color(255, 0, 51));
        labelTitle4.setText("= is assignment.");
        labelTitle4.setAlignmentX(45.0F);
        labelTitle4.setAlignmentY(15.0F);

        labelTitle5.setFont(new java.awt.Font("Helvetica Neue", 2, 18)); // NOI18N
        labelTitle5.setForeground(new java.awt.Color(255, 0, 51));
        labelTitle5.setText("== is test for equality.");
        labelTitle5.setAlignmentX(45.0F);
        labelTitle5.setAlignmentY(15.0F);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("\tProgram \t\t::== Block $\n\n\tBlock \t\t::== { StatementList }\n\n\tStatementList \t\t::== Statement StatementList\n\t\t\t::== ε\n\n\tStatement \t\t::== PrintStatement\n\t\t\t::== AssignmentStatement\n\t\t\t::== VarDecl\n\t\t\t::== WhileStatement\n\t\t\t::== IfStatement\n\t\t\t::== Block\n\n\tPrintStatement \t::== print ( Expr )\n\tAssignmentStatement \t::== Id = Expr\n\tVarDecl \t\t::== type Id\n\tWhileStatement \t::== while BooleanExpr Block\n\tIfStatement \t\t::== if BooleanExpr Block\n\n\tExpr \t\t::== IntExpr\n\t\t\t::== StringExpr\n\t\t\t::== BooleanExpr\n\t\t\t::== Id\n\n\tIntExpr\t \t::== digit intop Expr\n\t\t\t::== digit\n\n\tStringExpr \t\t::== \" CharList \"\n\tBooleanExpr \t\t::== ( Expr boolop Expr )\n\t\t\t::== boolval\n\tId \t\t::== char\n\tCharList \t\t::== char CharList\n\t\t\t::== space CharList\n\t\t\t::== ε\n\t\n\ttype \t\t::== int | string | boolean\n\tchar \t\t::== a | b | c ... z\n\tspace \t\t::== the space character\n\tdigit \t\t::== 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9\n\n\tboolop \t\t::== == | !=\n\tboolval \t\t::== false | true\n\tintop \t\t::== +\n\n\n\tComments are bounded by /* and */ and ignored by the lexer.");
        jScrollPane2.setViewportView(jTextArea1);

        menuLexer.setToolTipText("");

        menuFile.setText("File");

        menuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        menuItemExit.setText("Exit");
        menuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemExitActionPerformed(evt);
            }
        });
        menuFile.add(menuItemExit);

        menuLexer.add(menuFile);

        menuHelp.setText("Help");

        menutItemHelp.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        menutItemHelp.setText("User help");
        menutItemHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menutItemHelpActionPerformed(evt);
            }
        });
        menuHelp.add(menutItemHelp);

        menutItemGrammar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        menutItemGrammar.setText("Grammar");
        menutItemGrammar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menutItemGrammarActionPerformed(evt);
            }
        });
        menuHelp.add(menutItemGrammar);

        menuLexer.add(menuHelp);

        setJMenuBar(menuLexer);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelTitle4, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTitle3, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelTitle5, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(400, 400, 400)
                        .addComponent(buttonReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(332, 332, 332)
                        .addComponent(labelTitle2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addComponent(labelTitle3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(138, 138, 138)
                .addComponent(labelTitle4)
                .addGap(254, 254, 254)
                .addComponent(labelTitle5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(labelTitle2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void menuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemExitActionPerformed
        Lexer lex = new Lexer();
        lex.setEnabled(true);
        lex.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_menuItemExitActionPerformed

    private void buttonReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonReturnActionPerformed
        Lexer lex = new Lexer();
        lex.setEnabled(true);
        lex.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_buttonReturnActionPerformed

    private void menutItemHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menutItemHelpActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LexerTestCasesHelpFrame().setVisible(true);
            }
        });
        this.setVisible(false);
        this.setEnabled(false);
    }//GEN-LAST:event_menutItemHelpActionPerformed

    private void menutItemGrammarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menutItemGrammarActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Grammar().setVisible(true);
            }
        });
        this.setVisible(false);
        this.setEnabled(false);
    }//GEN-LAST:event_menutItemGrammarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Grammar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Grammar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Grammar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Grammar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Grammar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonReturn;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel labelTitle2;
    private javax.swing.JLabel labelTitle3;
    private javax.swing.JLabel labelTitle4;
    private javax.swing.JLabel labelTitle5;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenuItem menuItemExit;
    private javax.swing.JMenuBar menuLexer;
    private javax.swing.JMenuItem menutItemGrammar;
    private javax.swing.JMenuItem menutItemHelp;
    // End of variables declaration//GEN-END:variables
}
